{"name":"Timeout","tagline":"A PHP implimentation of Javascript's setTimeout for Asynchronous PHP","body":"Timeout\r\n=========\r\n\r\nTimeout is a PHP implimentation of Javascript's setTimeout for **Asynchronous PHP**. It runs an asynchronous process in the background while the rest of your code can continue to run. Like forking a process, or spawning a thread. Timeout is extremely useful for sending off mail, or 3rd party API callbacks like twilio or phaxio.\r\n\r\nTimeout is as simple to run as setTimeout is in Javascript:\r\n\r\n\r\n    Timeout::run(function() {\r\n        mail('user@domain.com','Timeout Test','It works!');\r\n    }, 1000);\r\n\r\n\r\nTimeout uses SuperClosure (https://github.com/jeremeamia/super_closure) which allows us to wrap our closures with real objects like this:\r\n\r\n\r\n    require 'User.php';\r\n\r\n    $user = new User(array(\r\n        'Name' => 'Devin',\r\n        'Location' => 'LA',\r\n        'Food' => array(\r\n            'Sushi',\r\n            'Beer'\r\n        )\r\n    ));\r\n\r\n    $o = Timeout::run(function() use($user) {\r\n        file_put_contents('test.txt', print_r($user->data(), 1));\r\n    }, 1000, array(\r\n        'require' => function() {\r\n            // you will need to include class definitions first, so when decoding them they will be completed\r\n            require 'User.php';\r\n        }\r\n    ));\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}